{"filter":false,"title":"views.py","tooltip":"/physical/views.py","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["from django.shortcuts import render","","# Create your views here.",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["from django.shortcuts import render","","# Create your views here.",""]}],[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["from django.shortcuts import render","","# Create your views here.",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":47,"column":0},"action":"insert","lines":["from django.shortcuts import render, get_object_or_404, redirect, reverse","from django.http import HttpResponseRedirect","from nutrition.forms import bmi","from .models import Physical","from django.conf.urls import url","from django.contrib.auth.decorators import login_required","import datetime","","@login_required","def bmi_form(request):","    form = bmi(request.POST)","    if form.is_valid():","        height = form.cleaned_data['height']","        weight = form.cleaned_data['weight']","        physical = Physical()","        physical.height= height","        physical.weight= weight","        bmi_calc=round(weight/height**2, 2)","        if (bmi_calc < 18.5):","            bmi_category='Underweight'","        elif (bmi_calc >= 18.5) and (bmi_calc < 25):","            bmi_category='Healthy'","        elif (bmi_calc >= 25) and (bmi_calc < 30):","            bmi_category='Overweight'","        elif (bmi_calc >= 30) and (bmi_calc < 35):","            bmi_category='Obese'   ","        elif (bmi_calc >= 35) and (bmi_calc < 40):","            bmi_category='Severely obese'    ","        elif (bmi_calc >= 40) and (bmi_calc < 50):","            bmi_category='Morbidly obese'","        elif (bmi_calc >= 50):","            bmi_category='Super obese'","        else:","            bmi_category='No data available'","        form_save= form.save(commit=False)","        form_save.user= request.user","        form_save.save()","        # Always return an HttpResponseRedirect after successfully dealing","        # with POST data. This prevents data from being posted twice if a","        # user hits the Back button.","        return render(request, 'bmi_result.html', {'bmi_calc':bmi_calc, 'bmi_category':bmi_category})","    return render(request, 'bmi_form.html', {'form': form})","","def bmi_result(request):","    return render(request, 'bmi_result.html')","    ","    ",""]}],[{"start":{"row":2,"column":5},"end":{"row":2,"column":14},"action":"remove","lines":["nutrition"],"id":4},{"start":{"row":2,"column":5},"end":{"row":2,"column":6},"action":"insert","lines":["p"]},{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["h"]},{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["y"]},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["s"]},{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["i"]},{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["c"]},{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["a"]},{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["l"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":13},"end":{"row":2,"column":13},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1596208889203,"hash":"54977c888793775f462b85d82bebeeaf3ab20e8f"}