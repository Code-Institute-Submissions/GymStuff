{"changed":true,"filter":false,"title":"tests.py","tooltip":"/physical/tests.py","value":"from django.test import TestCase, Client\nfrom .models import User, Physical, Macro\nfrom .views import bmi_result\nfrom django.shortcuts import render, get_object_or_404, redirect, reverse\n\n# BMI Model Tests.\nclass BMI_Model_Tests(TestCase):\n    \n    # Test setup by creating new BMI models\n    def setUp(self):\n        # Client setup\n        self.client = Client()\n        #create user models \n        user1 = User.objects.create(id=1, username='Bob', email='bob@example.com')\n        user2 = User.objects.create(id=2, username='Jan', email='jan@example.com')\n        #create model objects\n        Physical.objects.create(\n            user = user1,\n            height = 160.00,\n            weight = 80.00,\n            unit_type = 'Metric'\n            )\n        Physical.objects.create(\n            user= user2,\n            height = 80.00,\n            weight = 200.00,\n            unit_type = 'Imperial'\n            )\n    \n    ####### Model tests #######\n    \n    # Get height from user id\n    def test_get_height_from_user(self):\n        \"\"\"Height correctly retrieved by user\"\"\"\n        height1 = Physical.objects.get(user=1)\n        height2 = Physical.objects.get(user=2)\n        self.assertEqual(height1.height, 160.00)\n        self.assertEqual(height2.height, 80.00)\n        \n    # Get weight from user id\n    def test_get_weight_from_user(self):\n        \"\"\"Weight correctly retrieved by user\"\"\"\n        weight1 = Physical.objects.get(user=1)\n        weight2 = Physical.objects.get(user=2)\n        self.assertEqual(weight1.weight, 80.00)\n        self.assertEqual(weight2.weight, 200.00)\n        \n    # Calculate user unit height:\n    def test_calculate_unit_height(self):\n        \"\"\"Unit height calculated correctly\"\"\"\n        metric = Physical.objects.get(unit_type=\"Metric\")\n        imperial = Physical.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.calculate_unit_height(), 1.60)\n        self.assertEqual(imperial.calculate_unit_height(), 2.032)\n\n    # Calculate user unit weight:\n    def test_calculate_unit_weight(self):\n        \"\"\"Unit weight calculated correctly\"\"\"\n        metric = Physical.objects.get(unit_type=\"Metric\")\n        imperial = Physical.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.calculate_unit_weight(), 80.00)\n        self.assertEqual(imperial.calculate_unit_weight(), 91.00)\n        \n    # Calculate user BMI\n    def test_calculate_bmi(self):\n        \"\"\"Bmi correctly calculated\"\"\"\n        metric = Physical.objects.get(unit_type=\"Metric\")\n        imperial = Physical.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.calculated_bmi(), 31.25)\n        self.assertEqual(imperial.calculated_bmi(), 22.04)\n        \n    # Calculate user BMI category\n    def test_calculate_bmi_category(self):\n        \"\"\"Bmi category correctly calculated\"\"\"\n        metric = Physical.objects.get(unit_type=\"Metric\")\n        imperial = Physical.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.category_calc(), 'Obese')\n        self.assertEqual(imperial.category_calc(), 'Healthy')\n        \n        \n    ####### View tests #######\n    \n    # Test bmi results page rendered\n    #def test_bmi_result_page(self):\n     #   url = reverse('bmi_result')\n      #  response = self.client.get(url)\n       # self.assertEqual(response.status_code, 200)\n        #self.assertTemplateUsed(response, 'bmi_result.html')\n\n    #def test_bmi_result_page(self):\n     #   details = Physical.objects.get(unit_type=\"Metric\")\n      #  response = self.client.post(reverse('bmi_result'), details.height)\n       # self.assertEqual(response.status_code, 200)\n        #self.assertTemplateUsed(response, 'bmi_result.html')\n        #self.assertEqual(response, 160.00)\n        \n    \n    def test_my_view(self):\n        response = self.client.get(reverse('bmi_result'))\n        self.assertTemplateUsed(response, 'bmi_result.html')\n        response.context[-1]['object_list']\n        \n        \n# Macro model tests.\nclass Macro_Model_Tests(TestCase):\n    \n    # Test setup by creating new bmi models\n    def setUp(self):\n        #create user models \n        user1 = User.objects.create(id=1, username='Bob', email='bob@example.com')\n        user2 = User.objects.create(id=2, username='Jan', email='jan@example.com')\n        #create model objects\n        Macro.objects.create(\n            user = user1,\n            height = 160.00,\n            weight = 80.00,\n            age=40.00,\n            unit_type = 'Metric',\n            activity_level = 'little exercise',\n            aim ='lose weight'\n            )\n        Macro.objects.create(\n            user= user2,\n            height = 80.00,\n            weight = 200.00,\n            age=24.00,\n            unit_type = 'Imperial',\n            activity_level = 'heavy exercise',\n            aim ='maintain'\n            )\n    \n    # Get height from user id\n    def test_get_height_from_user(self):\n        \"\"\"Height correctly retrieved by user\"\"\"\n        height1 = Macro.objects.get(user=1)\n        height2 = Macro.objects.get(user=2)\n        self.assertEqual(height1.height, 160.00)\n        self.assertEqual(height2.height, 80.00)\n        \n    # Get weight from user id\n    def test_get_weight_from_user(self):\n        \"\"\"Weight correctly retrieved by user\"\"\"\n        weight1 = Macro.objects.get(user=1)\n        weight2 = Macro.objects.get(user=2)\n        self.assertEqual(weight1.weight, 80.00)\n        self.assertEqual(weight2.weight, 200.00)\n        \n    # Calculate user unit height:\n    def test_calculate_unit_height(self):\n        \"\"\"Unit height calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.calculate_unit_height(), 1.60)\n        self.assertEqual(imperial.calculate_unit_height(), 2.032)\n\n    # Calculate user unit weight:\n    def test_calculate_unit_weight(self):\n        \"\"\"Unit weight calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.calculate_unit_weight(), 80.00)\n        self.assertEqual(imperial.calculate_unit_weight(), 91.00)\n    \n    # Calculate user bmr:\n    def test_calculate_bmr(self):\n        \"\"\"BMR calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.bmr_calc(), 1530.40)\n        self.assertEqual(imperial.bmr_calc(), 1791.05)\n    \n    # Calculate user TDEE:\n    def test_calculate_TDEE(self):\n        \"\"\"TDEE calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.TDEE_calc(), 1836.48)\n        self.assertEqual(imperial.TDEE_calc(), 3089.56)\n    \n    # Calculate user daily calorie goal:\n    def test_calculate_daily_calorie_goal(self):\n        \"\"\"Calorie goal calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.calculated_calorie_goal(), 1561.01)\n        self.assertEqual(imperial.calculated_calorie_goal(), 3089.56)\n    \n    # Calculate user daily carb weight:\n    def test_calculate_daily_carb_weight(self):\n        \"\"\"Carb weight calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.carb_calc(), 117.00)\n        self.assertEqual(imperial.carb_calc(), 309.00)\n\n    # Calculate user daily protein weight:\n    def test_calculate_daily_protein_weight(self):\n        \"\"\"Protein weight calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.protein_calc(), 156.00)\n        self.assertEqual(imperial.protein_calc(), 232.00)        \n\n    # Calculate user daily fat weight:\n    def test_calculate_daily_fat_weight(self):\n        \"\"\"Fat weight calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.fat_calc(), 52.00)\n        self.assertEqual(imperial.fat_calc(), 103.00)  \n\n    # Calculate user daily carb percent:\n    def test_calculate_daily_carb_percent(self):\n        \"\"\"Carb percent calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.carb_percent_calc()*100, 30.00)\n        self.assertEqual(imperial.carb_percent_calc()*100, 40.00)\n\n    # Calculate user daily protein weight:\n    def test_calculate_daily_protein_percent(self):\n        \"\"\"Protein percent calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.protein_percent_calc()*100, 40.00)\n        self.assertEqual(imperial.protein_percent_calc()*100, 30.00)        \n\n    # Calculate user daily fat percent:\n    def test_calculate_daily_fat_percent(self):\n        \"\"\"Fat weight calculated correctly\"\"\"\n        metric = Macro.objects.get(unit_type=\"Metric\")\n        imperial = Macro.objects.get(unit_type=\"Imperial\")\n        self.assertEqual(metric.fat_percent_calc()*100, 30.00)\n        self.assertEqual(imperial.fat_percent_calc()*100, 30.00)  \n\n\n","undoManager":{"mark":98,"position":100,"stack":[[{"start":{"row":101,"column":39},"end":{"row":101,"column":40},"action":"remove","lines":["’"],"id":999}],[{"start":{"row":101,"column":33},"end":{"row":101,"column":45},"action":"remove","lines":["'param, None"],"id":1000},{"start":{"row":101,"column":33},"end":{"row":101,"column":49},"action":"insert","lines":["'height': 180.00"]}],[{"start":{"row":101,"column":33},"end":{"row":101,"column":34},"action":"insert","lines":["{"],"id":1001}],[{"start":{"row":101,"column":50},"end":{"row":101,"column":51},"action":"insert","lines":["}"],"id":1002}],[{"start":{"row":98,"column":27},"end":{"row":99,"column":0},"action":"insert","lines":["",""],"id":1003},{"start":{"row":99,"column":0},"end":{"row":99,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":99,"column":8},"end":{"row":103,"column":35},"action":"insert","lines":["   data = {","      ‘param’: ‘fiesta’","    }","    response = self.client.post(reverse(‘my-view), data)","    assertEqual(response, ‘fiesta’)"],"id":1004}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":4},"action":"insert","lines":["    "],"id":1005},{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"insert","lines":["    "]},{"start":{"row":101,"column":0},"end":{"row":101,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":99,"column":8},"end":{"row":101,"column":9},"action":"remove","lines":["       data = {","          ‘param’: ‘fiesta’","        }"],"id":1006},{"start":{"row":99,"column":8},"end":{"row":99,"column":33},"action":"insert","lines":["data = {'height': 180.00}"]}],[{"start":{"row":100,"column":32},"end":{"row":100,"column":55},"action":"remove","lines":["reverse(‘my-view), data"],"id":1007},{"start":{"row":100,"column":32},"end":{"row":100,"column":59},"action":"insert","lines":["reverse('bmi_result'), data"]}],[{"start":{"row":100,"column":4},"end":{"row":100,"column":8},"action":"insert","lines":["    "],"id":1008}],[{"start":{"row":101,"column":4},"end":{"row":101,"column":8},"action":"insert","lines":["    "],"id":1009}],[{"start":{"row":101,"column":8},"end":{"row":101,"column":39},"action":"remove","lines":["assertEqual(response, ‘fiesta’)"],"id":1010},{"start":{"row":101,"column":8},"end":{"row":101,"column":41},"action":"insert","lines":["self.assertEqual(response, 180.00"]}],[{"start":{"row":101,"column":41},"end":{"row":101,"column":42},"action":"insert","lines":[")"],"id":1011}],[{"start":{"row":102,"column":0},"end":{"row":105,"column":43},"action":"remove","lines":["        data = {'height': 180.00}","        response = self.client.post(reverse('bmi_result'), data, content_type='application/x-www-form-urlencoded')","        param = request.data.get({'height': 180.00})","        self.assertEqual(response, 180.00) "],"id":1012}],[{"start":{"row":100,"column":64},"end":{"row":101,"column":0},"action":"insert","lines":["",""],"id":1013},{"start":{"row":101,"column":0},"end":{"row":101,"column":8},"action":"insert","lines":["        "]},{"start":{"row":101,"column":8},"end":{"row":101,"column":9},"action":"insert","lines":["v"]},{"start":{"row":101,"column":9},"end":{"row":101,"column":10},"action":"insert","lines":["a"]},{"start":{"row":101,"column":10},"end":{"row":101,"column":11},"action":"insert","lines":["l"]},{"start":{"row":101,"column":11},"end":{"row":101,"column":12},"action":"insert","lines":["u"]},{"start":{"row":101,"column":12},"end":{"row":101,"column":13},"action":"insert","lines":["e"]}],[{"start":{"row":101,"column":13},"end":{"row":101,"column":14},"action":"insert","lines":["="],"id":1014},{"start":{"row":101,"column":14},"end":{"row":101,"column":15},"action":"insert","lines":["1"]},{"start":{"row":101,"column":15},"end":{"row":101,"column":16},"action":"insert","lines":["8"]},{"start":{"row":101,"column":16},"end":{"row":101,"column":17},"action":"insert","lines":["0"]}],[{"start":{"row":101,"column":17},"end":{"row":101,"column":18},"action":"insert","lines":["."],"id":1015},{"start":{"row":101,"column":18},"end":{"row":101,"column":19},"action":"insert","lines":["0"]},{"start":{"row":101,"column":19},"end":{"row":101,"column":20},"action":"insert","lines":["0"]}],[{"start":{"row":101,"column":20},"end":{"row":102,"column":0},"action":"insert","lines":["",""],"id":1016},{"start":{"row":102,"column":0},"end":{"row":102,"column":8},"action":"insert","lines":["        "]},{"start":{"row":102,"column":8},"end":{"row":102,"column":9},"action":"insert","lines":["v"]},{"start":{"row":102,"column":9},"end":{"row":102,"column":10},"action":"insert","lines":["a"]},{"start":{"row":102,"column":10},"end":{"row":102,"column":11},"action":"insert","lines":["l"]},{"start":{"row":102,"column":11},"end":{"row":102,"column":12},"action":"insert","lines":["u"]},{"start":{"row":102,"column":12},"end":{"row":102,"column":13},"action":"insert","lines":["e"]}],[{"start":{"row":102,"column":13},"end":{"row":102,"column":14},"action":"insert","lines":["."],"id":1017}],[{"start":{"row":102,"column":14},"end":{"row":102,"column":28},"action":"insert","lines":["encode('utf8')"],"id":1018}],[{"start":{"row":103,"column":35},"end":{"row":103,"column":41},"action":"remove","lines":["180.00"],"id":1019},{"start":{"row":103,"column":35},"end":{"row":103,"column":55},"action":"insert","lines":["value.encode('utf8')"]}],[{"start":{"row":101,"column":20},"end":{"row":102,"column":28},"action":"remove","lines":["","        value.encode('utf8')"],"id":1020}],[{"start":{"row":101,"column":14},"end":{"row":101,"column":54},"action":"insert","lines":["str(items['longitude']).encode('utf-16')"],"id":1021}],[{"start":{"row":101,"column":54},"end":{"row":101,"column":60},"action":"remove","lines":["180.00"],"id":1022}],[{"start":{"row":101,"column":18},"end":{"row":101,"column":36},"action":"remove","lines":["items['longitude']"],"id":1023},{"start":{"row":101,"column":18},"end":{"row":101,"column":24},"action":"insert","lines":["180.00"]}],[{"start":{"row":102,"column":54},"end":{"row":102,"column":55},"action":"remove","lines":[")"],"id":1024},{"start":{"row":102,"column":53},"end":{"row":102,"column":54},"action":"remove","lines":["'"]},{"start":{"row":102,"column":52},"end":{"row":102,"column":53},"action":"remove","lines":["8"]},{"start":{"row":102,"column":51},"end":{"row":102,"column":52},"action":"remove","lines":["f"]},{"start":{"row":102,"column":50},"end":{"row":102,"column":51},"action":"remove","lines":["t"]},{"start":{"row":102,"column":49},"end":{"row":102,"column":50},"action":"remove","lines":["u"]},{"start":{"row":102,"column":48},"end":{"row":102,"column":49},"action":"remove","lines":["'"]},{"start":{"row":102,"column":47},"end":{"row":102,"column":49},"action":"remove","lines":["()"]},{"start":{"row":102,"column":46},"end":{"row":102,"column":47},"action":"remove","lines":["e"]},{"start":{"row":102,"column":45},"end":{"row":102,"column":46},"action":"remove","lines":["d"]},{"start":{"row":102,"column":44},"end":{"row":102,"column":45},"action":"remove","lines":["o"]},{"start":{"row":102,"column":43},"end":{"row":102,"column":44},"action":"remove","lines":["c"]},{"start":{"row":102,"column":42},"end":{"row":102,"column":43},"action":"remove","lines":["n"]},{"start":{"row":102,"column":41},"end":{"row":102,"column":42},"action":"remove","lines":["e"]},{"start":{"row":102,"column":40},"end":{"row":102,"column":41},"action":"remove","lines":["."]}],[{"start":{"row":102,"column":40},"end":{"row":102,"column":41},"action":"insert","lines":[")"],"id":1025}],[{"start":{"row":101,"column":39},"end":{"row":101,"column":40},"action":"remove","lines":["6"],"id":1026},{"start":{"row":101,"column":38},"end":{"row":101,"column":39},"action":"remove","lines":["1"]}],[{"start":{"row":101,"column":38},"end":{"row":101,"column":39},"action":"insert","lines":["8"],"id":1027}],[{"start":{"row":100,"column":31},"end":{"row":100,"column":35},"action":"remove","lines":["post"],"id":1028},{"start":{"row":100,"column":31},"end":{"row":100,"column":32},"action":"insert","lines":["g"]},{"start":{"row":100,"column":32},"end":{"row":100,"column":33},"action":"insert","lines":["e"]},{"start":{"row":100,"column":33},"end":{"row":100,"column":34},"action":"insert","lines":["t"]}],[{"start":{"row":100,"column":62},"end":{"row":100,"column":63},"action":"insert","lines":["="],"id":1029}],[{"start":{"row":100,"column":63},"end":{"row":100,"column":65},"action":"insert","lines":["{}"],"id":1030}],[{"start":{"row":100,"column":64},"end":{"row":100,"column":80},"action":"insert","lines":["'height': 180.00"],"id":1031}],[{"start":{"row":101,"column":0},"end":{"row":101,"column":41},"action":"remove","lines":["        value=str(180.00).encode('utf-8')"],"id":1032},{"start":{"row":100,"column":82},"end":{"row":101,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":98,"column":27},"end":{"row":99,"column":33},"action":"remove","lines":["","        data = {'height': 180.00}"],"id":1033}],[{"start":{"row":100,"column":35},"end":{"row":100,"column":40},"action":"remove","lines":["value"],"id":1034},{"start":{"row":100,"column":35},"end":{"row":100,"column":41},"action":"insert","lines":["180.00"]}],[{"start":{"row":100,"column":33},"end":{"row":100,"column":34},"action":"insert","lines":["."],"id":1035},{"start":{"row":100,"column":34},"end":{"row":100,"column":35},"action":"insert","lines":["d"]},{"start":{"row":100,"column":35},"end":{"row":100,"column":36},"action":"insert","lines":["a"]},{"start":{"row":100,"column":36},"end":{"row":100,"column":37},"action":"insert","lines":["t"]},{"start":{"row":100,"column":37},"end":{"row":100,"column":38},"action":"insert","lines":["a"]}],[{"start":{"row":99,"column":8},"end":{"row":99,"column":82},"action":"remove","lines":["response = self.client.get(reverse('bmi_result'), data={'height': 180.00})"],"id":1036},{"start":{"row":99,"column":8},"end":{"row":100,"column":0},"action":"insert","lines":["response = client.get(reverse('blog_search'), {'q': 'Holy'})",""]}],[{"start":{"row":99,"column":39},"end":{"row":99,"column":50},"action":"remove","lines":["blog_search"],"id":1037},{"start":{"row":99,"column":39},"end":{"row":99,"column":40},"action":"insert","lines":["b"]},{"start":{"row":99,"column":40},"end":{"row":99,"column":41},"action":"insert","lines":["m"]},{"start":{"row":99,"column":41},"end":{"row":99,"column":42},"action":"insert","lines":["i"]}],[{"start":{"row":99,"column":39},"end":{"row":99,"column":42},"action":"remove","lines":["bmi"],"id":1038},{"start":{"row":99,"column":39},"end":{"row":99,"column":49},"action":"insert","lines":["bmi_result"]}],[{"start":{"row":99,"column":55},"end":{"row":99,"column":56},"action":"remove","lines":["q"],"id":1039}],[{"start":{"row":99,"column":55},"end":{"row":99,"column":56},"action":"insert","lines":["h"],"id":1040},{"start":{"row":99,"column":56},"end":{"row":99,"column":57},"action":"insert","lines":["e"]},{"start":{"row":99,"column":57},"end":{"row":99,"column":58},"action":"insert","lines":["i"]},{"start":{"row":99,"column":58},"end":{"row":99,"column":59},"action":"insert","lines":["g"]},{"start":{"row":99,"column":59},"end":{"row":99,"column":60},"action":"insert","lines":["h"]},{"start":{"row":99,"column":60},"end":{"row":99,"column":61},"action":"insert","lines":["t"]}],[{"start":{"row":99,"column":68},"end":{"row":99,"column":69},"action":"remove","lines":["y"],"id":1041},{"start":{"row":99,"column":67},"end":{"row":99,"column":68},"action":"remove","lines":["l"]},{"start":{"row":99,"column":66},"end":{"row":99,"column":67},"action":"remove","lines":["o"]}],[{"start":{"row":99,"column":66},"end":{"row":99,"column":67},"action":"insert","lines":["1"],"id":1042}],[{"start":{"row":99,"column":66},"end":{"row":99,"column":67},"action":"remove","lines":["1"],"id":1043},{"start":{"row":99,"column":65},"end":{"row":99,"column":66},"action":"remove","lines":["H"]},{"start":{"row":99,"column":64},"end":{"row":99,"column":66},"action":"remove","lines":["''"]}],[{"start":{"row":99,"column":64},"end":{"row":99,"column":65},"action":"insert","lines":["1"],"id":1044},{"start":{"row":99,"column":65},"end":{"row":99,"column":66},"action":"insert","lines":["8"]},{"start":{"row":99,"column":66},"end":{"row":99,"column":67},"action":"insert","lines":["0"]},{"start":{"row":99,"column":67},"end":{"row":99,"column":68},"action":"insert","lines":["."]},{"start":{"row":99,"column":68},"end":{"row":99,"column":69},"action":"insert","lines":["-"]}],[{"start":{"row":99,"column":68},"end":{"row":99,"column":69},"action":"remove","lines":["-"],"id":1045}],[{"start":{"row":99,"column":68},"end":{"row":99,"column":69},"action":"insert","lines":["0"],"id":1046},{"start":{"row":99,"column":69},"end":{"row":99,"column":70},"action":"insert","lines":["0"]}],[{"start":{"row":99,"column":72},"end":{"row":100,"column":0},"action":"remove","lines":["",""],"id":1047}],[{"start":{"row":100,"column":8},"end":{"row":100,"column":47},"action":"remove","lines":["self.assertEqual(response.data, 180.00)"],"id":1048},{"start":{"row":100,"column":8},"end":{"row":100,"column":43},"action":"insert","lines":["response.context[-1]['object_list']"]}],[{"start":{"row":99,"column":19},"end":{"row":99,"column":20},"action":"insert","lines":["s"],"id":1049},{"start":{"row":99,"column":20},"end":{"row":99,"column":21},"action":"insert","lines":["e"]},{"start":{"row":99,"column":21},"end":{"row":99,"column":22},"action":"insert","lines":["l"]},{"start":{"row":99,"column":22},"end":{"row":99,"column":23},"action":"insert","lines":["f"]},{"start":{"row":99,"column":23},"end":{"row":99,"column":24},"action":"insert","lines":["."]}],[{"start":{"row":98,"column":27},"end":{"row":98,"column":28},"action":"insert","lines":["]"],"id":1068}],[{"start":{"row":98,"column":28},"end":{"row":102,"column":20},"action":"insert","lines":["response = c.post('/login/', {'username': 'john', 'password': 'smith'})",">>> response.status_code","200",">>> response = c.get('/customer/details/')",">>> response.content"],"id":1069}],[{"start":{"row":98,"column":26},"end":{"row":98,"column":28},"action":"remove","lines":[":]"],"id":1070},{"start":{"row":98,"column":26},"end":{"row":98,"column":27},"action":"insert","lines":["]"]}],[{"start":{"row":98,"column":27},"end":{"row":99,"column":0},"action":"insert","lines":["",""],"id":1071},{"start":{"row":99,"column":0},"end":{"row":99,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":99,"column":4},"end":{"row":99,"column":8},"action":"insert","lines":["    "],"id":1072}],[{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"insert","lines":["    "],"id":1073}],[{"start":{"row":100,"column":4},"end":{"row":100,"column":8},"action":"remove","lines":[">>> "],"id":1074},{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"insert","lines":["    "],"id":1075}],[{"start":{"row":100,"column":4},"end":{"row":100,"column":8},"action":"insert","lines":["    "],"id":1076}],[{"start":{"row":101,"column":0},"end":{"row":101,"column":3},"action":"remove","lines":["200"],"id":1077},{"start":{"row":100,"column":28},"end":{"row":101,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":99,"column":28},"end":{"row":99,"column":33},"action":"remove","lines":["login"],"id":1078},{"start":{"row":99,"column":28},"end":{"row":99,"column":38},"action":"insert","lines":["bmi_result"]}],[{"start":{"row":99,"column":43},"end":{"row":99,"column":82},"action":"remove","lines":["'username': 'john', 'password': 'smith'"],"id":1079},{"start":{"row":99,"column":43},"end":{"row":99,"column":59},"action":"insert","lines":["'height': 180.00"]}],[{"start":{"row":100,"column":28},"end":{"row":101,"column":42},"action":"remove","lines":["",">>> response = c.get('/customer/details/')"],"id":1080}],[{"start":{"row":100,"column":28},"end":{"row":101,"column":4},"action":"remove","lines":["",">>> "],"id":1081}],[{"start":{"row":100,"column":28},"end":{"row":101,"column":0},"action":"insert","lines":["",""],"id":1082},{"start":{"row":101,"column":0},"end":{"row":101,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":101,"column":24},"end":{"row":103,"column":43},"action":"remove","lines":["","        response = self.client.get(reverse('bmi_result'), {'height': 180.00})","        response.context[-1]['object_list']"],"id":1083}],[{"start":{"row":98,"column":26},"end":{"row":98,"column":27},"action":"remove","lines":["]"],"id":1084}],[{"start":{"row":98,"column":26},"end":{"row":98,"column":27},"action":"insert","lines":[":"],"id":1085}],[{"start":{"row":99,"column":19},"end":{"row":99,"column":20},"action":"remove","lines":["c"],"id":1086}],[{"start":{"row":99,"column":19},"end":{"row":99,"column":20},"action":"insert","lines":["s"],"id":1087},{"start":{"row":99,"column":20},"end":{"row":99,"column":21},"action":"insert","lines":["e"]},{"start":{"row":99,"column":21},"end":{"row":99,"column":22},"action":"insert","lines":["l"]},{"start":{"row":99,"column":22},"end":{"row":99,"column":23},"action":"insert","lines":["f"]},{"start":{"row":99,"column":23},"end":{"row":99,"column":24},"action":"insert","lines":["."]},{"start":{"row":99,"column":24},"end":{"row":99,"column":25},"action":"insert","lines":["c"]},{"start":{"row":99,"column":25},"end":{"row":99,"column":26},"action":"insert","lines":["l"]},{"start":{"row":99,"column":26},"end":{"row":99,"column":27},"action":"insert","lines":["i"]},{"start":{"row":99,"column":27},"end":{"row":99,"column":28},"action":"insert","lines":["e"]},{"start":{"row":99,"column":28},"end":{"row":99,"column":29},"action":"insert","lines":["n"]}],[{"start":{"row":99,"column":29},"end":{"row":99,"column":30},"action":"insert","lines":["t"],"id":1088}],[{"start":{"row":100,"column":8},"end":{"row":100,"column":60},"action":"insert","lines":["self.assertEqual(result['car'], ['toyota', 'honda'])"],"id":1089}],[{"start":{"row":100,"column":60},"end":{"row":100,"column":80},"action":"remove","lines":["response.status_code"],"id":1090}],[{"start":{"row":100,"column":25},"end":{"row":100,"column":38},"action":"remove","lines":["result['car']"],"id":1091},{"start":{"row":100,"column":25},"end":{"row":100,"column":45},"action":"insert","lines":["response.status_code"]}],[{"start":{"row":100,"column":47},"end":{"row":100,"column":66},"action":"remove","lines":["['toyota', 'honda']"],"id":1092},{"start":{"row":100,"column":47},"end":{"row":100,"column":48},"action":"insert","lines":["2"]},{"start":{"row":100,"column":48},"end":{"row":100,"column":49},"action":"insert","lines":["0"]},{"start":{"row":100,"column":49},"end":{"row":100,"column":50},"action":"insert","lines":["0"]}],[{"start":{"row":101,"column":8},"end":{"row":101,"column":24},"action":"insert","lines":["self.assertEqual"],"id":1093}],[{"start":{"row":101,"column":8},"end":{"row":101,"column":24},"action":"remove","lines":["self.assertEqual"],"id":1094},{"start":{"row":101,"column":8},"end":{"row":101,"column":36},"action":"insert","lines":["self.assertIn('car', result)"]}],[{"start":{"row":101,"column":35},"end":{"row":101,"column":36},"action":"remove","lines":[")"],"id":1095},{"start":{"row":101,"column":34},"end":{"row":101,"column":35},"action":"remove","lines":["t"]},{"start":{"row":101,"column":33},"end":{"row":101,"column":34},"action":"remove","lines":["l"]},{"start":{"row":101,"column":32},"end":{"row":101,"column":33},"action":"remove","lines":["u"]},{"start":{"row":101,"column":31},"end":{"row":101,"column":32},"action":"remove","lines":["s"]},{"start":{"row":101,"column":30},"end":{"row":101,"column":31},"action":"remove","lines":["e"]},{"start":{"row":101,"column":29},"end":{"row":101,"column":30},"action":"remove","lines":["r"]}],[{"start":{"row":101,"column":45},"end":{"row":101,"column":46},"action":"insert","lines":[" "],"id":1096},{"start":{"row":101,"column":46},"end":{"row":101,"column":47},"action":"insert","lines":[")"]}],[{"start":{"row":101,"column":45},"end":{"row":101,"column":46},"action":"remove","lines":[" "],"id":1097}],[{"start":{"row":101,"column":22},"end":{"row":101,"column":27},"action":"remove","lines":["'car'"],"id":1098},{"start":{"row":101,"column":22},"end":{"row":101,"column":23},"action":"insert","lines":["1"]},{"start":{"row":101,"column":23},"end":{"row":101,"column":24},"action":"insert","lines":["8"]},{"start":{"row":101,"column":24},"end":{"row":101,"column":25},"action":"insert","lines":["0"]},{"start":{"row":101,"column":25},"end":{"row":101,"column":26},"action":"insert","lines":["."]},{"start":{"row":101,"column":26},"end":{"row":101,"column":27},"action":"insert","lines":["0"]},{"start":{"row":101,"column":27},"end":{"row":101,"column":28},"action":"insert","lines":["0"]}],[{"start":{"row":99,"column":36},"end":{"row":99,"column":50},"action":"remove","lines":["'/bmi_result/'"],"id":1099},{"start":{"row":99,"column":36},"end":{"row":99,"column":57},"action":"insert","lines":["reverse('bmi_result')"]}],[{"start":{"row":2,"column":24},"end":{"row":2,"column":30},"action":"remove","lines":["Client"],"id":1100}],[{"start":{"row":0,"column":32},"end":{"row":0,"column":33},"action":"insert","lines":[","],"id":1101}],[{"start":{"row":0,"column":33},"end":{"row":0,"column":34},"action":"insert","lines":[" "],"id":1102}],[{"start":{"row":0,"column":34},"end":{"row":0,"column":40},"action":"insert","lines":["Client"],"id":1103}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":24},"action":"remove","lines":["from django.test import "],"id":1104},{"start":{"row":1,"column":41},"end":{"row":2,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":98,"column":0},"end":{"row":100,"column":47},"action":"remove","lines":["        response = self.client.post(reverse('bmi_result'), {'height': 180.00})","        self.assertEqual(response.status_code, 200)","        self.assertIn(180.00, response.content)"],"id":1105},{"start":{"row":98,"column":0},"end":{"row":98,"column":44},"action":"insert","lines":["response = client.get(reverse('blog_index'))"]}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":1},"action":"insert","lines":["`"],"id":1106},{"start":{"row":98,"column":1},"end":{"row":98,"column":2},"action":"insert","lines":["`"]}],[{"start":{"row":98,"column":1},"end":{"row":98,"column":2},"action":"remove","lines":["`"],"id":1107},{"start":{"row":98,"column":0},"end":{"row":98,"column":1},"action":"remove","lines":["`"]}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"insert","lines":["    "],"id":1108}],[{"start":{"row":98,"column":4},"end":{"row":98,"column":8},"action":"insert","lines":["    "],"id":1109}],[{"start":{"row":98,"column":40},"end":{"row":98,"column":49},"action":"remove","lines":["log_index"],"id":1110},{"start":{"row":98,"column":40},"end":{"row":98,"column":41},"action":"insert","lines":["m"]},{"start":{"row":98,"column":41},"end":{"row":98,"column":42},"action":"insert","lines":["i"]},{"start":{"row":98,"column":42},"end":{"row":98,"column":43},"action":"insert","lines":["_"]}],[{"start":{"row":98,"column":39},"end":{"row":98,"column":43},"action":"remove","lines":["bmi_"],"id":1111},{"start":{"row":98,"column":39},"end":{"row":98,"column":49},"action":"insert","lines":["bmi_result"]}],[{"start":{"row":98,"column":19},"end":{"row":98,"column":20},"action":"insert","lines":["s"],"id":1112},{"start":{"row":98,"column":20},"end":{"row":98,"column":21},"action":"insert","lines":["e"]},{"start":{"row":98,"column":21},"end":{"row":98,"column":22},"action":"insert","lines":["l"]},{"start":{"row":98,"column":22},"end":{"row":98,"column":23},"action":"insert","lines":["f"]},{"start":{"row":98,"column":23},"end":{"row":98,"column":24},"action":"insert","lines":["."]}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":4},"action":"insert","lines":["    "],"id":1113}],[{"start":{"row":99,"column":4},"end":{"row":99,"column":8},"action":"insert","lines":["    "],"id":1114}],[{"start":{"row":99,"column":8},"end":{"row":99,"column":60},"action":"insert","lines":["self.assertTemplateUsed(response, 'bmi_result.html')"],"id":1115}],[{"start":{"row":99,"column":60},"end":{"row":100,"column":0},"action":"insert","lines":["",""],"id":1116},{"start":{"row":100,"column":0},"end":{"row":100,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":100,"column":8},"end":{"row":100,"column":43},"action":"insert","lines":["response.context[-1]['object_list']"],"id":1117}]]},"ace":{"folds":[],"scrolltop":1116,"scrollleft":0,"selection":{"start":{"row":100,"column":43},"end":{"row":100,"column":43},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1598086169076}