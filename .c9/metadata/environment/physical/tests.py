{"filter":false,"title":"tests.py","tooltip":"/physical/tests.py","undoManager":{"mark":14,"position":14,"stack":[[{"start":{"row":99,"column":65},"end":{"row":99,"column":66},"action":"insert","lines":["."],"id":2},{"start":{"row":99,"column":66},"end":{"row":99,"column":67},"action":"insert","lines":["h"]},{"start":{"row":99,"column":67},"end":{"row":99,"column":68},"action":"insert","lines":["e"]},{"start":{"row":99,"column":68},"end":{"row":99,"column":69},"action":"insert","lines":["i"]},{"start":{"row":99,"column":69},"end":{"row":99,"column":70},"action":"insert","lines":["g"]},{"start":{"row":99,"column":70},"end":{"row":99,"column":71},"action":"insert","lines":["h"]},{"start":{"row":99,"column":71},"end":{"row":99,"column":72},"action":"insert","lines":["t"]}],[{"start":{"row":99,"column":56},"end":{"row":99,"column":72},"action":"remove","lines":[", details.height"],"id":3}],[{"start":{"row":101,"column":50},"end":{"row":102,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":102,"column":0},"end":{"row":102,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":102,"column":8},"end":{"row":102,"column":42},"action":"insert","lines":["self.assertEqual(response, 160.00)"],"id":5}],[{"start":{"row":101,"column":0},"end":{"row":101,"column":50},"action":"remove","lines":["        print(response.context[-1]['object_list'])"],"id":6},{"start":{"row":100,"column":60},"end":{"row":101,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":101,"column":36},"end":{"row":101,"column":37},"action":"remove","lines":["6"],"id":7}],[{"start":{"row":101,"column":36},"end":{"row":101,"column":37},"action":"insert","lines":["8"],"id":8}],[{"start":{"row":82,"column":5},"end":{"row":82,"column":6},"action":"remove","lines":[" "],"id":9},{"start":{"row":82,"column":4},"end":{"row":82,"column":5},"action":"remove","lines":["#"]}],[{"start":{"row":83,"column":4},"end":{"row":83,"column":5},"action":"remove","lines":["#"],"id":10}],[{"start":{"row":82,"column":4},"end":{"row":82,"column":5},"action":"insert","lines":["#"],"id":11}],[{"start":{"row":84,"column":5},"end":{"row":84,"column":6},"action":"remove","lines":["#"],"id":12}],[{"start":{"row":85,"column":6},"end":{"row":85,"column":7},"action":"remove","lines":["#"],"id":13}],[{"start":{"row":86,"column":7},"end":{"row":86,"column":8},"action":"remove","lines":["#"],"id":14}],[{"start":{"row":87,"column":8},"end":{"row":87,"column":9},"action":"remove","lines":["#"],"id":15}],[{"start":{"row":88,"column":0},"end":{"row":103,"column":8},"action":"remove","lines":["","    #def test_bmi_result_page(self):","     #   details = Physical.objects.get(unit_type=\"Metric\")","      #  response = self.client.post(reverse('bmi_result'), details.height)","       # self.assertEqual(response.status_code, 200)","        #self.assertTemplateUsed(response, 'bmi_result.html')","        #self.assertEqual(response, 160.00)","        ","    ","    def test_my_view(self):","        details = Physical.objects.get(unit_type=\"Metric\")","        response = self.client.get(reverse('bmi_result'))","        self.assertTemplateUsed(response, 'bmi_result.html')","        self.assertEqual(response, 180.00)","        ","        "],"id":16}]]},"ace":{"folds":[],"scrolltop":1035,"scrollleft":0,"selection":{"start":{"row":84,"column":35},"end":{"row":84,"column":35},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":72,"state":"start","mode":"ace/mode/python"}},"timestamp":1598211062948,"hash":"73ab737e7074fe25375b01ceede087a2d26ec912"}